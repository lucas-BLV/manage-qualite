pipeline {
    agent any

    environment {
        SONAR_PROJECT_KEY = 'client-crud-app'
        SONAR_HOST_URL = 'http://sonarqube:9000'
        SONAR_LOGIN = credentials('sonar')
    }

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/lucas-BLV/manage-qualite.git'
            }
        }

        stage('Install Front') {
            steps {
                dir('client-crud-app/front/projet') {
                    sh 'npm install'
                }
            }
        }

        stage('Lint Front') {
            steps {
                dir('client-crud-app/front/projet') {
                    sh 'npx eslint .'
                }
            }
        }

        stage('Build Front') {
            steps {
                dir('client-crud-app/front/projet') {
                    sh 'npm run build'
                }
            }
        }

        stage('Test Front') {
            steps {
                dir('client-crud-app/front/projet') {
                    sh 'npm test || true' // en tolérant les erreurs de test
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                dir('client-crud-app/front/projet') {
                    withSonarQubeEnv('SonarQube') {
                        sh """
                            sonar-scanner \
                                -Dsonar.projectKey=${SONAR_PROJECT_KEY} \
                                -Dsonar.sources=src \
                                -Dsonar.host.url=${SONAR_HOST_URL} \
                                -Dsonar.login=${SONAR_LOGIN}
                        """
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline exécuté avec succès !'
        }
        failure {
            echo 'Échec de la pipeline.'
        }
    }
}
